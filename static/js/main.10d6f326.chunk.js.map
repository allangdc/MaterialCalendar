{"version":3,"sources":["components/calendar/header.tsx","components/calendar/style.ts","components/calendar/table.tsx","components/calendar/cells/index.tsx","components/calendar/monthly.tsx","components/calendar/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Control","Grid","container","item","xs","Button","Typography","variant","align","Header","props","id","style","display","justifyContent","alignItems","ToggleButtonGroup","value","height","ToggleButton","useStyles","makeStyles","headercell","border","borderWidth","minHeight","cell","Table","header","data","lineColor","classes","ncols","length","line","Array","lines","push","map","index","className","borderColor","Cells","children","day","currentDate","useContext","CalendarContext","backgroundColor","getDay","colorCells","color","padding","getMonth","getDate","Monthly","language","daysArray","initCal","startOfDay","startOfWeek","endCal","endOfWeek","i","differenceInDays","toLocaleDateString","weekday","split","addDays","getWeekName","dataArray","startOfMonth","endOfMonth","getDays","initialContext","Date","setCurrDate","createContext","Calendar","useState","currDate","calendarContext","Provider","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.10d6f326.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  Button,\n  Grid,\n  ToggleButton,\n  ToggleButtonGroup,\n  Typography,\n} from \"@mui/material\";\n\ninterface Props {\n  id?: string;\n}\n\nconst Header: React.FC<Props> = (props: Props) => {\n  const { id } = props;\n\n  return (\n    <Grid container id={id}>\n      <Grid item xs={3}>\n        <Button>Hoje</Button>\n      </Grid>\n      <Grid item xs={6}>\n        <Control />\n      </Grid>\n      <Grid\n        item\n        xs={3}\n        style={{\n          display: \"flex\",\n          justifyContent: \"flex-end\",\n          alignItems: \"center\",\n        }}\n      >\n        <ToggleButtonGroup value=\"month\" style={{ height: 30 }}>\n          <ToggleButton value=\"month\">Mês</ToggleButton>\n          <ToggleButton value=\"year\">Ano</ToggleButton>\n        </ToggleButtonGroup>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst Control: React.FC = () => (\n  <Grid container>\n    <Grid item xs={2}>\n      <Button>Voltar</Button>\n    </Grid>\n    <Grid item xs>\n      <Typography variant=\"h5\" align=\"center\">\n        MÊS\n      </Typography>\n    </Grid>\n    <Grid item xs={2}>\n      <Button>Avançar</Button>\n    </Grid>\n  </Grid>\n);\n\nexport default Header;\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport const useStyles = makeStyles({\n  headercell: {\n    border: \"solid\",\n    borderWidth: 1,\n    minHeight: 24,\n  },\n  cell: {\n    border: \"solid\",\n    borderWidth: \"0.01px\",\n  },\n});\n","import { Grid } from \"@mui/material\";\nimport React, { ReactElement } from \"react\";\nimport { useStyles } from \"./style\";\n\ninterface Props {\n  id?: string;\n  header: Array<ReactElement>;\n  data: Array<ReactElement>;\n  lineColor: string;\n}\n\nconst Table: React.FC<Props> = (props: Props) => {\n  const { id, header, data, lineColor } = props;\n  const classes = useStyles();\n\n  const ncols = header.length;\n  let line: Array<ReactElement> = new Array<ReactElement>();\n  const lines = new Array<ReactElement>();\n\n  while (data.length % ncols !== 0) {\n    data.push(<div />);\n  }\n\n  data.map((item: ReactElement, index: number) => {\n    line.push(\n      <Grid item xs key={`line_${index}`}>\n        <div className={classes.cell} style={{ borderColor: lineColor }}>\n          {item}\n        </div>\n      </Grid>\n    );\n    if (index % ncols === ncols - 1) {\n      lines.push(\n        <Grid container item xs={12} key={`lines_${lines.length}`}>\n          {line}\n        </Grid>\n      );\n      line = new Array<ReactElement>();\n    }\n  });\n\n  const Header = () => (\n    <Grid container item xs={12}>\n      {header.map((item: ReactElement, index: number) => (\n        <Grid item xs key={`header_${index}`}>\n          <div\n            className={classes.headercell}\n            style={{ borderColor: lineColor }}\n          >\n            {item}\n          </div>\n        </Grid>\n      ))}\n    </Grid>\n  );\n\n  return (\n    <Grid container id={id}>\n      <Header />\n      {lines}\n    </Grid>\n  );\n};\n\nexport default Table;\n","import React, { ReactChildren, useContext } from \"react\";\nimport { Grid, Typography } from \"@mui/material\";\nimport { CalendarContext } from \"..\";\n\ninterface Props {\n  id?: string;\n  children?: ReactChildren;\n  day: Date;\n}\n\nconst Cells: React.FC<Props> = (props: Props) => {\n  const { children, day } = props;\n  const { currentDate } = useContext(CalendarContext);\n\n  const colorCells = (): string | undefined => {\n    if (day.getDay() === 0 || day.getDay() === 6) {\n      return \"#F7F6F3\";\n    }\n    return undefined;\n  };\n\n  const colorText = (): string | undefined => {\n    if (day.getMonth() !== currentDate.getMonth()) {\n      return \"ThreeDHighlight\";\n    }\n    return \"gray\";\n  };\n\n  return (\n    <Grid container style={{ backgroundColor: colorCells(), minHeight: 50 }}>\n      <Grid item xs={12}>\n        <Typography\n          variant=\"subtitle2\"\n          align=\"right\"\n          color=\"ThreeDHighlight\"\n          style={{ padding: 5, color: colorText() }}\n        >\n          {day.getDate()}\n        </Typography>\n      </Grid>\n      <Grid item xs={12}>\n        {children}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Cells;\n","/* eslint-disable react/jsx-key */\nimport React from \"react\";\nimport { Typography } from \"@mui/material\";\nimport Table from \"./table\";\nimport {\n  addDays,\n  endOfMonth,\n  startOfDay,\n  startOfMonth,\n  startOfWeek,\n} from \"date-fns\";\nimport { differenceInDays, endOfWeek } from \"date-fns/esm\";\nimport Cells from \"./cells\";\n\ninterface Props {\n  id?: string;\n  currentDate: Date;\n  language: string;\n}\n\nconst Monthly: React.FC<Props> = (props: Props) => {\n  const { id, currentDate, language } = props;\n\n  const getDays = () => {\n    const data = new Array<Date>();\n    const initCal = startOfDay(startOfWeek(startOfMonth(currentDate)));\n    const endCal = startOfDay(endOfWeek(endOfMonth(currentDate)));\n\n    let i: Date = initCal;\n    while (differenceInDays(i, endCal) <= 0) {\n      data.push(i);\n      i = addDays(i, 1);\n    }\n    return data;\n  };\n\n  const getWeekName = () => {\n    const data = new Array<string>();\n    const initCal = startOfDay(startOfWeek(currentDate));\n    const endCal = startOfDay(endOfWeek(initCal));\n\n    let i: Date = initCal;\n    while (differenceInDays(i, endCal) <= 0) {\n      data.push(\n        i.toLocaleDateString(language, { weekday: \"long\" }).split(\"-\")[0]\n      );\n      i = addDays(i, 1);\n    }\n    return data;\n  };\n\n  const daysArray = getWeekName().map((item) => (\n    <Typography align=\"center\">{item}</Typography>\n  ));\n  const dataArray = getDays().map((item) => <Cells day={item} />);\n\n  return (\n    <Table\n      id={id}\n      header={daysArray}\n      data={dataArray}\n      lineColor=\"rgb(223 223 222)\"\n    />\n  );\n};\n\nexport default Monthly;\n","/* eslint-disable @typescript-eslint/no-empty-function */\nimport React, { createContext, useState } from \"react\";\nimport Header from \"./header\";\nimport Monthly from \"./monthly\";\n\ninterface ICalendarContext {\n  currentDate: Date;\n  setCurrDate: React.Dispatch<React.SetStateAction<Date>>;\n}\n\nconst initialContext: ICalendarContext = {\n  currentDate: new Date(),\n  setCurrDate: () => {},\n};\n\nexport const CalendarContext = createContext<ICalendarContext>(initialContext);\n\ninterface Props {\n  id?: string;\n}\n\nconst Calendar: React.FC<Props> = (props: Props) => {\n  const { id } = props;\n  const [currDate, setCurrDate] = useState<Date>(new Date());\n  const calendarContext: ICalendarContext = {\n    currentDate: currDate,\n    setCurrDate: setCurrDate,\n  };\n\n  return (\n    <div id={id}>\n      <CalendarContext.Provider value={calendarContext}>\n        <Header />\n        <Monthly id={\"monthly\"} currentDate={currDate} language=\"pt-BR\" />\n      </CalendarContext.Provider>\n    </div>\n  );\n};\n\nexport default Calendar;\n","import React from \"react\";\nimport { Button } from \"@mui/material\";\nimport Calendar from \"./components/calendar\";\n\n/**\n * Initial Class\n * @return {React.FC} Render the page.\n */\nconst App: React.FC = () => (\n  <div>\n    <h1>Header</h1>\n    <Calendar />\n    <h1>Footer</h1>\n    <Button variant=\"contained\">Enter</Button>\n  </div>\n);\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}